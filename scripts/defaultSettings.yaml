# `defaultSettings.yaml` for `latexindent.pl`/`latexindent.exe`
# version 3.18, 2022-06-12
# a script that aims to beautify .tex, .sty, .cls files
#
#---------------------------------------------------------------------------------------
# This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
# See http://www.gnu.org/licenses/.
# Chris Hughes, 2017
# For all communication, please visit: https://github.com/cmhughes/latexindent.pl
#
#---------------------------------------------------------------------------------------
# You should feel encouraged to change anything you like in these settings, but it would probably be better to have your own user settings files somewhere else - remember that this file may be overwritten when you update your tex distribution.
# Please see the manual linked from: https://github.com/cmhughes/latexindent.pl for details of how to create and configure your own settings files.
# Please read the manual (linked from above) first to understand what each switch does.
#
#---------------------------------------------------------------------------------------


###
### EXTENSION PREFERENCE
###

# File extension preference when not filled (ex: `latexindent myfile`).
fileExtensionPreference:
  .tex: 1
  .sty: 2
  .cls: 3
  .bib: 4


###
### BACKUP FILES
###

# Default extension for backup files.
backupExtension: .bak
# Unicity of backup file: several backups (`0`) or only one backup (`1`).
onlyOneBackUp: 0
# Max number of backup files: not limit (`0`) or limit of backup (`>0`).
maxNumberOfBackUps: 0
# Rename backup files to keep the most recent (only if `maxNumberOfBackUps` > 0).
cycleThroughBackUps: 0


###
### LOG FILES
###

# Preferences for information displayed in the log file.
logFilePreferences:
  showEveryYamlRead: 1
  showAmalgamatedSettings: 0
  showDecorationStartCodeBlockTrace: 0
  showDecorationFinishCodeBlockTrace: 0
  endLogFileWith: '----------------------------------------------------------------------------------------------------'
  showGitHubInfoFooter: 1
  Dumper:
    Terse: 1
    Indent: 1
    Useqq: 1
    Deparse: 1
    Quotekeys: 0
    Sortkeys: 1
    Pair: " => "


###
### VERBATIM COMMANDS
###

# Verbatim environments to do not change !
verbatimEnvironments:
  verbatim: 1
  lstlisting: 1
  minted: 1
# Verbatim commands to do not change !
verbatimCommands:
  verb: 1
  lstinline: 1


###
### INDENT EXCEPTIONS 
###

# Other blocks to do not indent no indent blocks.
noIndentBlock:
  noindent: 1
  cmhtest: 1
# `\begin{document}` and `\end{document}` are treated differently in filecontents environments.
fileContentsEnvironments:
  filecontents: 1
  filecontents*: 1


###
### PREAMBLE
###

# Indent preamble.
indentPreamble: 0
# Assume no preamble in cls, sty, by default.
lookForPreamble:
  .tex: 1
  .sty: 0
  .cls: 0
  .bib: 0
# Some preambles can contain `\begin` and `\end` statements that are not in their 'standard environment block'.
# For example, consider the following key = values:
#    `preheadhook={\begin{mdframed}[style=myframedstyle]}`,
#    `postfoothook=\end{mdframed}`
preambleCommandsBeforeEnvironments: 0


###
### DEFAULT INDENT
###

# Default value of indentation.
defaultIndent: "    "
# Remove trailing whitespace from all lines.
removeTrailingWhitespace:
  beforeProcessing: 0
  afterProcessing: 1


###
### DELIMITERS INDENT
###

# Name of code blocks that should have their body aligned at ampersand delimiters.
lookForAlignDelims:
  tabular:
    delims: 1
    alignDoubleBackSlash: 1
    spacesBeforeDoubleBackSlash: 1
    multiColumnGrouping: 0
    alignRowsWithoutMaxDelims: 1
    spacesBeforeAmpersand: 1
    spacesAfterAmpersand: 1
    justification: left
    alignFinalDoubleBackSlash: 0
    dontMeasure: 0
    delimiterRegEx: (?<!\\)(&)
    delimiterJustification: left
    lookForChildCodeBlocks: 1
  tabularx:
    delims: 1
  longtable: 1
  tabu: 1
  array: 1
  matrix: 1
  listabla: 1
  # amsmath
  align: 1
  align*: 1
  alignat: 1
  alignat*: 1
  aligned: 1
  bmatrix: 1
  Bmatrix: 1
  cases: 1
  flalign: 1
  flalign*: 1
  pmatrix: 1
  vmatrix: 1
  Vmatrix: 1
  # mathtools
  cases*: 1
  dcases: 1
  dcases*: 1
  rcases: 1
  rcases*: 1
  drcases: 1
  drcases*: 1
  # nicematrix
  NiceTabular: 1
  NiceMatrix: 1
  pNiceMatrix: 1
  bNiceMatrix: 1
  BNiceMatrix: 1
  vNiceMatrix: 1
  VNiceMatrix: 1
  NiceArray: 1
  pNiceArrayC: 1
  bNiceArrayC: 1
  BNiceArrayC: 1
  vNiceArrayC: 1
  VNiceArrayC: 1
  NiceArrayCwithDelims: 1
  pNiceArrayRC: 1
  bNiceArrayRC: 1
  BNiceArrayRC: 1
  vNiceArrayRC: 1
  VNiceArrayRC: 1
  NiceArrayRCwithDelims: 1
  # tabularray
  tblr: 1
  longtblr: 1
  talltblr: 1


###
### ITEMS ALIGNMENT
###

# Item environement to indent.
indentAfterItems:
  itemize: 1
  itemize*: 1
  enumerate: 1
  enumerate*: 1
  description: 1
  description*: 1
  list: 1
# Item names to to indent (nb: you can add custom item names here).
itemNames:
  item: 1
  myitem: 1


###
### EQUATIONS ALIGNMENT
###

# Alignement for math.
specialBeginEnd:
  displayMath:
    begin: '\\\['
    end: '\\\]'
    lookForThis: 1
  inlineMath:
    begin: (?<!\$)(?<!\\)\$(?!\$)
    end: (?<!\\)\$(?!\$)
    lookForThis: 1
  displayMathTeX:
    begin: \$\$
    end: \$\$
    lookForThis: 1
  specialBeforeCommand: 0


###
### HEADINGS AND SECTION ALIGNMENT
###

# Heading indent by order.
indentAfterHeadings:
  Annexes:
    indentAfterThisHeading: 1
    level: 2
  Annex:
    indentAfterThisHeading: 1
    level: 3
  part:
    indentAfterThisHeading: 1
    level: 1
  chapter:
    indentAfterThisHeading: 1
    level: 2
  section:
    indentAfterThisHeading: 1
    level: 3
  subsection:
    indentAfterThisHeading: 1
    level: 4
  subsubsection:
    indentAfterThisHeading: 1
    level: 5
  paragraph:
    indentAfterThisHeading: 1
    level: 6
  subparagraph:
    indentAfterThisHeading: 1
    level: 7
# Maximum indentation, off by default.
maximumIndentation: -1

###
### CODE BLOCKS
###

# Block with no *additional* indent (filed will inherit the *current* level but will have no *additional* indentation).
noAdditionalIndent:
  myexample: 1
  mydefinition: 1
  problem: 1
  exercises: 1
  mysolution: 1
  foreach: 0
  widepage: 1
  comment: 1
  document: 1
  frame: 1
# noAdditionalIndent, but globally for codeblocks.
noAdditionalIndentGlobal:
  environments: 0
  commands: 1
  optionalArguments: 0
  mandatoryArguments: 0
  ifElseFi: 0
  items: 0
  keyEqualsValuesBracesBrackets: 0
  namedGroupingBracesBrackets: 0
  UnNamedGroupingBracesBrackets: 0
  specialBeginEnd: 0
  afterHeading: 0
  filecontents: 0
# Specific indent rules for some fields.
indentRules:
  myenvironment: "    "
  anotherenvironment: "    "
  chapter: "    "
  section: "    "
  item: "    "
  myitem: "    "
# indentRules, but globally for codeblocks.
indentRulesGlobal:
  environments: 0
  commands: 0
  optionalArguments: 0
  mandatoryArguments: 0
  ifElseFi: 0
  items: 0
  keyEqualsValuesBracesBrackets: 0
  namedGroupingBracesBrackets: 0
  UnNamedGroupingBracesBrackets: 0
  specialBeginEnd: 0
  afterHeading: 0
  filecontents: 0
# Detail for command codeblock.
commandCodeBlocks:
  roundParenthesesAllowed: 1
  stringsAllowedBetweenArguments:
    - amalgamate: 1
    - node
    - at
    - to
    - decoration
    - \+\+
    - \-\-
    - '\#\#\d'
  commandNameSpecial:
    - amalgamate: 1
    - '@ifnextchar\['


###
### LINE BREAKS
###

# Change dos line breaks into unix.
dos2unixlinebreaks: 0
# Change line breaks: on same line ('-1'), no change ('0'), break the line ('1'), break the line and add a '%' ('2'), break to line ('3'). Effective only if the -m switch is active.
modifyLineBreaks:
  preserveBlankLines: 1
  condenseMultipleBlankLinesInto: 1
  oneSentencePerLine:
    manipulateSentences: 0
    removeSentenceLineBreaks: 1
    multipleSpacesToSingle: 1
    textWrapSentences: 0
    sentenceIndent: ""
    sentencesFollow:
      par: 1
      blankLine: 1
      fullStop: 1
      exclamationMark: 1
      questionMark: 1
      rightBrace: 1
      commentOnPreviousLine: 1
      other: 0
    sentencesBeginWith:
      A-Z: 1
      a-z: 0
      other: 0
    sentencesEndWith:
      basicFullStop: 0
      betterFullStop: 1
      exclamationMark: 1
      questionMark: 1
      other: 0
  textWrapOptions:
    columns: 0
    multipleSpacesToSingle: 1
    removeBlockLineBreaks: 1
    blocksFollow:
      headings: 1
      commentOnPreviousLine: 1
      par: 1
      blankLine: 1
      verbatim: 1
      filecontents: 1
      other: '\\\]|\\item(?:\h|\[)'       # regex
    blocksBeginWith:
      A-Z: 1
      a-z: 1
      0-9: 0
      other: 0                            # regex
    blocksEndBefore:
      commentOnOwnLine: 1
      verbatim: 1
      filecontents: 1
      other: '\\begin\{|\\\[|\\end\{'     # regex
    huge: overflow                        # forbid mid-word line breaks
    separator: ''
  environments:
    BeginStartsOnOwnLine: 0
    BodyStartsOnOwnLine: 0
    EndStartsOnOwnLine: 0
    EndFinishesWithLineBreak: 0
    equation*:
      BeginStartsOnOwnLine: 0
      BodyStartsOnOwnLine: 0
      EndStartsOnOwnLine: 0
      EndFinishesWithLineBreak: 0
  ifElseFi:
    IfStartsOnOwnLine: 0
    BodyStartsOnOwnLine: 0
    OrStartsOnOwnLine: 0
    OrFinishesWithLineBreak: 0
    ElseStartsOnOwnLine: 0
    ElseFinishesWithLineBreak: 0
    FiStartsOnOwnLine: 0
    FiFinishesWithLineBreak: 0
    ifnum:
      IfStartsOnOwnLine: 0
      BodyStartsOnOwnLine: 0
      OrStartsOnOwnLine: 0
      OrFinishesWithLineBreak: 0
      ElseStartsOnOwnLine: 0
      ElseFinishesWithLineBreak: 0
      FiStartsOnOwnLine: 0
      FiFinishesWithLineBreak: 0
  commands:
    CommandStartsOnOwnLine: 0
    CommandNameFinishesWithLineBreak: 0
  optionalArguments:
    LSqBStartsOnOwnLine: 0
    OptArgBodyStartsOnOwnLine: 0
    RSqBStartsOnOwnLine: 0
    RSqBFinishesWithLineBreak: 0
  mandatoryArguments:
    LCuBStartsOnOwnLine: 0
    MandArgBodyStartsOnOwnLine: 0
    RCuBStartsOnOwnLine: 0
    RCuBFinishesWithLineBreak: 0
  keyEqualsValuesBracesBrackets:
    KeyStartsOnOwnLine: 0
    EqualsStartsOnOwnLine: 0
    EqualsFinishesWithLineBreak: 0
  items:
    ItemStartsOnOwnLine: 0
    ItemFinishesWithLineBreak: 0
  namedGroupingBracesBrackets:
    NameStartsOnOwnLine: 0
    NameFinishesWithLineBreak: 0
  specialBeginEnd:
    SpecialBeginStartsOnOwnLine: 0
    SpecialBodyStartsOnOwnLine: 0
    SpecialEndStartsOnOwnLine: 0
    SpecialEndFinishesWithLineBreak: 0
  verbatim:
    VerbatimBeginStartsOnOwnLine: 0
    VerbatimEndFinishesWithLineBreak: 0

# Replacements (use -r or -rr)
replacements:
  - amalgamate: 1
  - this: latexindent.pl
    that: pl.latexindent
    lookForThis: 0
    when: before

# Tweak the internal pattern matching.
fineTuning:
  environments:
    name: '[a-zA-Z@\*0-9_\\]+'
  ifElseFi:
    name: '(?!@?if[a-zA-Z@]*?\{)@?if[a-zA-Z@]*?'
  commands:
    name: '[+a-zA-Z@\*0-9_\:]+?'
  items:
    canBeFollowedBy: '(?:\[[^]]*?\])|(?:<[^>]*?>)'
  keyEqualsValuesBracesBrackets:
    name: '[a-zA-Z@\*0-9_\/.:\#-]+[a-zA-Z@\*0-9_\/.\h\{\}:\#-]*?'
    follow: '(?:(?<!\\)\{)|,|(?:(?<!\\)\[)'
  namedGroupingBracesBrackets:
    name: '[0-9\.a-zA-Z@\*><]+?'
    follow: '\h|\R|\{|\[|\$|\)|\('
  UnNamedGroupingBracesBrackets:
    follow: '\{|\[|,|&|\)|\(|\$'
  arguments:
    before: '(?:#\d\h*;?,?\/?)+|\<.*?\>'
    between: _|\^|\*
  trailingComments:
    notPreceededBy: (?<!\\)
  modifyLineBreaks:
    doubleBackSlash: '\\\\(?:\h*\[\h*\d+\h*[a-zA-Z]+\h*\])?'
    comma: ','
    betterFullStop: |-
      (?x)                                # ignore spaces in the below
      (?:                                 #
        \.\)                              # .) 
        (?!\h*[a-z])                      # not *followed by* a-z
      )                                   #
      |                                   # OR
      (?:                                 #
        (?<!                              # not *preceeded by*
          (?:                             #
            (?:[eE]\.[gG])                # e.g OR E.g OR e.G OR E.G
            |                             #
            (?:[iI]\.[eE])                # i.e OR I.e OR i.E OR I.E
            |                             #
            (?:etc)                       # etc
          )                               #
        )                                 #
      )                                   # 
      \.                                  # .
      (?!                                 # not *followed by*
        (?:                               #
          [a-zA-Z0-9-~,]                  #
          |                               #
          \),                             # ),
          |                               #
          \)\.                            # ).
        )                                 #
      )                                   #
